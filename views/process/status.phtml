<?php
/*=========================================================================
MIDAS Server
Copyright (c) Kitware SAS. 20 rue de la Villette. All rights reserved.
69328 Lyon, FRANCE.

See Copyright.txt for details.
This software is distributed WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the above copyright notices for more information.
=========================================================================*/


 
//$this->headScript()->appendFile($this->coreWebroot . '/public/js/jquery/jquery.tablesorter.min.js');
//$this->headScript()->appendFile($this->apiWebroot . '/public/js/common/common.ajaxapi.js');
//$this->headScript()->appendFile($this->moduleWebroot . '/public/js/process/process.status.js');
?>
<link type="text/css" rel="stylesheet" href="<?php echo $this->moduleWebroot?>/public/css/layout/pyslicer.css" />

<div id="jobstatus" class="viewMain" >
<?php
echo '<ul id="midas_pyslicer_jobstatus_header">';
echo "<li>Name: " .$this->job->getName().'</li>';
echo '<li>Status: <span class="'.$this->statusClasses[$this->job->getStatus()].'">'.$this->statusStrings[$this->job->getStatus()].'</span></li>';
echo "<li>Params: " .$this->job->getParams().'</li>';
echo "<li>Script: " .$this->job->getScript().'</li>';
echo "<li>Creation Date: " .$this->job->getCreationDate().'</li>';
echo "</ul>";

// TODO move this to a component
$condition = $this->job->getCondition();
//echo $condition;
if(isset($condition) && $condition != '')
  {
  $condition = ltrim($condition, "['");
  $condition = rtrim($condition, "']");
  $errorLines = explode("', '", $condition);
  echo "Error Trace: ";
  echo '<ul id="midas_pyslicer_jobstatus_condition">';
  $splitLines = array();
  
  foreach($errorLines as $errorLine)
    {
    $lines = explode("\\n", $errorLine);
    $splitLines = array_merge($splitLines, $lines);
    }
  foreach($splitLines as $errorLine)
    {
    echo '<li>'.$errorLine.'</li>';
    }
  echo "</ul>";
  }

$settingModel = MidasLoader::loadModel('Setting');
$twistedServerUrl = $settingModel->getValueByName('slicerProxyUrl', 'pyslicer');
    
$url = $twistedServerUrl . '/status?job_id='. $this->job->getJobId();
$data = file_get_contents($url);
$data = trim($data, '[]');
$events = explode(',', $data);
$messageEvent = '/status job=(.*) eventid=(.*) timestamp=(.*) eventType=(.*) message=(.*)/';
$nonmessageEvent = '/status job=(.*) eventid=(.*) timestamp=(.*) eventType=(.*)/';
echo '<table>';
$headers = array('Event', 'Timestamp', 'Message');
echo '<tr>';
foreach($headers as $header)
  {
  echo '<td>' . $header . '</td>';
  }
echo '</tr>';

foreach($events as $event)
  {
  $event = trim($event, "'");
  $event = str_replace('\r', '', $event);
  if(preg_match($messageEvent, $event, $matches))
    {
    $timestamp = $matches[3];
    $eventType = $matches[4];
    $message = $matches[5];
    }
  else
    {
    preg_match($nonmessageEvent, $event, $matches);
    $timestamp = $matches[3];
    $eventType = $matches[4];
    $message = '';
    }
    
    echo '<tr>';
    echo '<td>' . $eventType . '</td>';
    echo '<td>' . $timestamp . '</td>';
    echo '<td>' . $message . '</td>';
    echo '</tr>';  
  }
echo '</table>';

echo 'View Inputs:';
foreach($this->insAndOuts['inputs'] as $input)
  {
  echo '<a href="'.$input['url'].'">'.$input['text'].'</a>';  
  }
echo 'View Outputs:';
foreach($this->insAndOuts['outputs'] as $output)
  {
  echo '<a href="'.$output['url'].'">'.$output['text'].'</a>';  
  }

// input & maybe a thumbnail?
// output link


?>
</div>



